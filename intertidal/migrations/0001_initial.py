# Generated by Django 5.1.3 on 2024-11-07 00:23

import django.db.models.deletion
import intertidal.models
import partial_date.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True)),
                ('alternative_names', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('address', models.CharField(blank=True)),
                ('links', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('emails', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True)),
                ('alternative_names', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('links', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('emails', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'people',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.CharField(choices=[('VANCOUVER', 'Vancouver'), ('SINGAPORE', 'Singapore'), ('HONG_KONG', 'Hong Kong')], db_index=True, default='VANCOUVER')),
                ('display_category', models.CharField(choices=[('LITERARY_WORK', 'Literary Work'), ('ART_PERFORMANCE', 'Art/Performance'), ('STATE_ARCHITECTURE_MISC', 'State/Architecture/Misc.'), ('NEWS_DOCUMENTARY', 'News/Documentary'), ('ACADEMIC_RESEARCH', 'Academic Research'), ('SOCIAL_MEDIA', 'Social Media')], db_index=True, default='LITERARY_WORK')),
                ('name', models.CharField(db_index=True, verbose_name='Name/Title')),
                ('alternative_names', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None, verbose_name='Alternative Names/Titles')),
                ('forms', intertidal.models.ArrayField(base_field=models.CharField(choices=[('article', 'Article'), ('article_journal', 'Article Journal'), ('article_magazine', 'Article Magazine'), ('article_newspaper', 'Article Newspaper'), ('bill', 'Bill'), ('book', 'Book'), ('broadcast', 'Broadcast'), ('chapter', 'Chapter'), ('classic', 'Classic'), ('collection', 'Collection'), ('dataset', 'Dataset'), ('document', 'Document'), ('entry', 'Entry'), ('entry_dictionary', 'Entry Dictionary'), ('entry_encyclopedia', 'Entry Encyclopedia'), ('event', 'Event'), ('figure', 'Figure'), ('graphic', 'Graphic'), ('hearing', 'Hearing'), ('interview', 'Interview'), ('legal_case', 'Legal Case'), ('legislation', 'Legislation'), ('manuscript', 'Manuscript'), ('map', 'Map'), ('motion_picture', 'Motion Picture'), ('musical_score', 'Musical Score'), ('pamphlet', 'Pamphlet'), ('paper_conference', 'Paper Conference'), ('patent', 'Patent'), ('performance', 'Performance'), ('periodical', 'Periodical'), ('personal_communication', 'Personal Communication'), ('post', 'Post'), ('post_weblog', 'Post Weblog'), ('regulation', 'Regulation'), ('report', 'Report'), ('review', 'Review'), ('review_book', 'Review Book'), ('software', 'Software'), ('song', 'Song'), ('speech', 'Speech'), ('standard', 'Standard'), ('thesis', 'Thesis'), ('treaty', 'Treaty'), ('webpage', 'Webpage')]), blank=True, default=list, help_text='See the list of <a href="https://docs.citationstyles.org/en/stable/specification.html#appendix-iii-types" target="_blank">Citation Style Language Types</a> for descriptions of each form', size=None, verbose_name='Physical/Digital Forms')),
                ('genres', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('keywords', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('date', partial_date.fields.PartialDateField(blank=True, db_index=True, null=True)),
                ('date_end', partial_date.fields.PartialDateField(blank=True, null=True)),
                ('date_current', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('links', intertidal.models.ArrayField(base_field=models.CharField(), blank=True, default=list, size=None)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, verbose_name='Location/Venue')),
                ('address', models.CharField(blank=True)),
                ('date', partial_date.fields.PartialDateField(blank=True, db_index=True, null=True)),
                ('date_end', partial_date.fields.PartialDateField(blank=True, null=True)),
                ('date_current', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrences', to='intertidal.resource')),
            ],
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, verbose_name='Name/Title')),
                ('translation', models.BooleanField(default=False)),
                ('translation_language', models.CharField(blank=True, choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ar-dz', 'Algerian Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('ckb', 'Central Kurdish (Sorani)'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('ig', 'Igbo'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('ms', 'Malay'), ('my', 'Burmese'), ('nb', 'Norwegian Bokm√•l'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('tg', 'Tajik'), ('th', 'Thai'), ('tk', 'Turkmen'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('ug', 'Uyghur'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], default='en', verbose_name='language')),
                ('date', partial_date.fields.PartialDateField(blank=True, db_index=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='intertidal.resource')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationResponsibilityStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.BigIntegerField()),
                ('marc_relators', intertidal.models.ArrayField(base_field=models.CharField(choices=[('abr', 'Abridger'), ('act', 'Actor'), ('adp', 'Adapter'), ('rcp', 'Addressee'), ('anl', 'Analyst'), ('anm', 'Animator'), ('ann', 'Annotator'), ('anc', 'Announcer'), ('apl', 'Appellant'), ('ape', 'Appellee'), ('app', 'Applicant'), ('arc', 'Architect'), ('arr', 'Arranger'), ('acp', 'Art copyist'), ('adi', 'Art director'), ('art', 'Artist'), ('ard', 'Artistic director'), ('asg', 'Assignee'), ('asn', 'Associated name'), ('att', 'Attributed name'), ('auc', 'Auctioneer'), ('aue', 'Audio engineer'), ('aup', 'Audio producer'), ('aut', 'Author'), ('aqt', 'Author in quotations or text abstracts'), ('aft', 'Author of afterword, colophon, etc.'), ('aud', 'Author of dialog'), ('aui', 'Author of introduction, etc.'), ('ato', 'Autographer'), ('ant', 'Bibliographic antecedent'), ('bnd', 'Binder'), ('bdd', 'Binding designer'), ('blw', 'Blurb writer'), ('bka', 'Book artist'), ('bkd', 'Book designer'), ('bkp', 'Book producer'), ('bjd', 'Bookjacket designer'), ('bpd', 'Bookplate designer'), ('bsl', 'Bookseller'), ('brl', 'Braille embosser'), ('brd', 'Broadcaster'), ('cll', 'Calligrapher'), ('cop', 'Camera operator'), ('ctg', 'Cartographer'), ('cas', 'Caster'), ('cad', 'Casting director'), ('cns', 'Censor'), ('chr', 'Choreographer'), ('cng', 'Cinematographer'), ('cli', 'Client'), ('cor', 'Collection registrar'), ('col', 'Collector'), ('clt', 'Collotyper'), ('clr', 'Colorist'), ('cmm', 'Commentator'), ('cwt', 'Commentator for written text'), ('com', 'Compiler'), ('cpl', 'Complainant'), ('cpt', 'Complainant-appellant'), ('cpe', 'Complainant-appellee'), ('cmp', 'Composer'), ('cmt', 'Compositor'), ('ccp', 'Conceptor'), ('cnd', 'Conductor'), ('con', 'Conservator'), ('csl', 'Consultant'), ('csp', 'Consultant to a project'), ('cos', 'Contestant'), ('cot', 'Contestant-appellant'), ('coe', 'Contestant-appellee'), ('cts', 'Contestee'), ('ctt', 'Contestee-appellant'), ('cte', 'Contestee-appellee'), ('ctr', 'Contractor'), ('ctb', 'Contributor'), ('cpc', 'Copyright claimant'), ('cph', 'Copyright holder'), ('crr', 'Corrector'), ('crp', 'Correspondent'), ('cst', 'Costume designer'), ('cou', 'Court governed'), ('crt', 'Court reporter'), ('cov', 'Cover designer'), ('cre', 'Creator'), ('cur', 'Curator'), ('dnc', 'Dancer'), ('dtc', 'Data contributor'), ('dtm', 'Data manager'), ('dte', 'Dedicatee'), ('dto', 'Dedicator'), ('dfd', 'Defendant'), ('dft', 'Defendant-appellant'), ('dfe', 'Defendant-appellee'), ('dgc', 'Degree committee member'), ('dgg', 'Degree granting institution'), ('dgs', 'Degree supervisor'), ('dln', 'Delineator'), ('dpc', 'Depicted'), ('dpt', 'Depositor'), ('dsr', 'Designer'), ('drt', 'Director'), ('dis', 'Dissertant'), ('dbp', 'Distribution place'), ('djo', 'DJ'), ('dnr', 'Donor'), ('drm', 'Draftsman'), ('dbd', 'Dubbing director'), ('dub', 'Dubious author'), ('edt', 'Editor'), ('edc', 'Editor of compilation'), ('edm', 'Editor of moving image work'), ('edd', 'Editorial director'), ('elg', 'Electrician'), ('elt', 'Electrotyper'), ('enj', 'Enacting jurisdiction'), ('eng', 'Engineer'), ('egr', 'Engraver'), ('etr', 'Etcher'), ('evp', 'Event place'), ('exp', 'Expert'), ('fac', 'Facsimilist'), ('fld', 'Field director'), ('fmd', 'Film director'), ('fds', 'Film distributor'), ('flm', 'Film editor'), ('fmp', 'Film producer'), ('fmk', 'Filmmaker'), ('fpy', 'First party'), ('frg', 'Forger'), ('fmo', 'Former owner'), ('fon', 'Founder'), ('fnd', 'Funder'), ('gis', 'Geographic information specialist'), ('hnr', 'Honoree'), ('hst', 'Host'), ('his', 'Host institution'), ('ilu', 'Illuminator'), ('ill', 'Illustrator'), ('ins', 'Inscriber'), ('itr', 'Instrumentalist'), ('ive', 'Interviewee'), ('ivr', 'Interviewer'), ('inv', 'Inventor'), ('isb', 'Issuing body'), ('jud', 'Judge'), ('jug', 'Jurisdiction governed'), ('lbr', 'Laboratory'), ('ldr', 'Laboratory director'), ('lsa', 'Landscape architect'), ('led', 'Lead'), ('len', 'Lender'), ('lil', 'Libelant'), ('lit', 'Libelant-appellant'), ('lie', 'Libelant-appellee'), ('lel', 'Libelee'), ('let', 'Libelee-appellant'), ('lee', 'Libelee-appellee'), ('lbt', 'Librettist'), ('lse', 'Licensee'), ('lso', 'Licensor'), ('lgd', 'Lighting designer'), ('ltg', 'Lithographer'), ('lyr', 'Lyricist'), ('mka', 'Makeup artist'), ('mfp', 'Manufacture place'), ('mfr', 'Manufacturer'), ('mrb', 'Marbler'), ('mrk', 'Markup editor'), ('med', 'Medium'), ('mdc', 'Metadata contact'), ('mte', 'Metal-engraver'), ('mtk', 'Minute taker'), ('mxe', 'Mixing engineer'), ('mod', 'Moderator'), ('mon', 'Monitor'), ('mcp', 'Music copyist'), ('mup', 'Music programmer'), ('msd', 'Musical director'), ('mus', 'Musician'), ('nrt', 'Narrator'), ('nan', 'News anchor'), ('onp', 'Onscreen participant'), ('osp', 'Onscreen presenter'), ('opn', 'Opponent'), ('orm', 'Organizer'), ('org', 'Originator'), ('oth', 'Other'), ('own', 'Owner'), ('pan', 'Panelist'), ('ppm', 'Papermaker'), ('pta', 'Patent applicant'), ('pth', 'Patent holder'), ('pat', 'Patron'), ('prf', 'Performer'), ('pma', 'Permitting agency'), ('pht', 'Photographer'), ('pad', 'Place of address'), ('ptf', 'Plaintiff'), ('ptt', 'Plaintiff-appellant'), ('pte', 'Plaintiff-appellee'), ('plt', 'Platemaker'), ('pra', 'Praeses'), ('pre', 'Presenter'), ('prt', 'Printer'), ('pop', 'Printer of plates'), ('prm', 'Printmaker'), ('prc', 'Process contact'), ('pro', 'Producer'), ('prn', 'Production company'), ('prs', 'Production designer'), ('pmn', 'Production manager'), ('prd', 'Production personnel'), ('prp', 'Production place'), ('prg', 'Programmer'), ('pdr', 'Project director'), ('pfr', 'Proofreader'), ('prv', 'Provider'), ('pup', 'Publication place'), ('pbl', 'Publisher'), ('pbd', 'Publishing director'), ('ppt', 'Puppeteer'), ('rdd', 'Radio director'), ('rpc', 'Radio producer'), ('rap', 'Rapporteur'), ('rce', 'Recording engineer'), ('rcd', 'Recordist'), ('red', 'Redaktor'), ('rxa', 'Remix artist'), ('ren', 'Renderer'), ('rpt', 'Reporter'), ('rps', 'Repository'), ('rth', 'Research team head'), ('rtm', 'Research team member'), ('res', 'Researcher'), ('rsp', 'Respondent'), ('rst', 'Respondent-appellant'), ('rse', 'Respondent-appellee'), ('rpy', 'Responsible party'), ('rsg', 'Restager'), ('rsr', 'Restorationist'), ('rev', 'Reviewer'), ('rbr', 'Rubricator'), ('sce', 'Scenarist'), ('sad', 'Scientific advisor'), ('aus', 'Screenwriter'), ('scr', 'Scribe'), ('scl', 'Sculptor'), ('spy', 'Second party'), ('sec', 'Secretary'), ('sll', 'Seller'), ('std', 'Set designer'), ('stg', 'Setting'), ('sgn', 'Signer'), ('sng', 'Singer'), ('swd', 'Software developer'), ('sds', 'Sound designer'), ('sde', 'Sound engineer'), ('spk', 'Speaker'), ('sfx', 'Special effects provider'), ('spn', 'Sponsor'), ('sgd', 'Stage director'), ('stm', 'Stage manager'), ('stn', 'Standards body'), ('str', 'Stereotyper'), ('stl', 'Storyteller'), ('sht', 'Supporting host'), ('srv', 'Surveyor'), ('tch', 'Teacher'), ('tcd', 'Technical director'), ('tld', 'Television director'), ('tlg', 'Television guest'), ('tlh', 'Television host'), ('tlp', 'Television producer'), ('tau', 'Television writer'), ('ths', 'Thesis advisor'), ('trc', 'Transcriber'), ('trl', 'Translator'), ('tyd', 'Type designer'), ('tyg', 'Typographer'), ('uvp', 'University place'), ('vdg', 'Videographer'), ('vfx', 'Visual effects provider'), ('vac', 'Voice actor'), ('wit', 'Witness'), ('wde', 'Wood engraver'), ('wdc', 'Woodcutter'), ('wam', 'Writer of accompanying material'), ('wac', 'Writer of added commentary'), ('wal', 'Writer of added lyrics'), ('wat', 'Writer of added text'), ('win', 'Writer of introduction'), ('wpr', 'Writer of preface'), ('wst', 'Writer of supplementary textual content')]), default=list, size=None, verbose_name='responsibilities')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ['Resource', 'Edition', 'Occurrence']}, on_delete=django.db.models.deletion.CASCADE, related_name='organization_responsibility_statements', to='contenttypes.contenttype')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsibility_statements', to='intertidal.organization')),
            ],
            options={
                'db_table': 'intertidal_organization_responsibility_statement',
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='intertidal__content_4be160_idx')],
            },
        ),
        migrations.CreateModel(
            name='PersonResponsibilityStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.BigIntegerField()),
                ('marc_relators', intertidal.models.ArrayField(base_field=models.CharField(choices=[('abr', 'Abridger'), ('act', 'Actor'), ('adp', 'Adapter'), ('rcp', 'Addressee'), ('anl', 'Analyst'), ('anm', 'Animator'), ('ann', 'Annotator'), ('anc', 'Announcer'), ('apl', 'Appellant'), ('ape', 'Appellee'), ('app', 'Applicant'), ('arc', 'Architect'), ('arr', 'Arranger'), ('acp', 'Art copyist'), ('adi', 'Art director'), ('art', 'Artist'), ('ard', 'Artistic director'), ('asg', 'Assignee'), ('asn', 'Associated name'), ('att', 'Attributed name'), ('auc', 'Auctioneer'), ('aue', 'Audio engineer'), ('aup', 'Audio producer'), ('aut', 'Author'), ('aqt', 'Author in quotations or text abstracts'), ('aft', 'Author of afterword, colophon, etc.'), ('aud', 'Author of dialog'), ('aui', 'Author of introduction, etc.'), ('ato', 'Autographer'), ('ant', 'Bibliographic antecedent'), ('bnd', 'Binder'), ('bdd', 'Binding designer'), ('blw', 'Blurb writer'), ('bka', 'Book artist'), ('bkd', 'Book designer'), ('bkp', 'Book producer'), ('bjd', 'Bookjacket designer'), ('bpd', 'Bookplate designer'), ('bsl', 'Bookseller'), ('brl', 'Braille embosser'), ('brd', 'Broadcaster'), ('cll', 'Calligrapher'), ('cop', 'Camera operator'), ('ctg', 'Cartographer'), ('cas', 'Caster'), ('cad', 'Casting director'), ('cns', 'Censor'), ('chr', 'Choreographer'), ('cng', 'Cinematographer'), ('cli', 'Client'), ('cor', 'Collection registrar'), ('col', 'Collector'), ('clt', 'Collotyper'), ('clr', 'Colorist'), ('cmm', 'Commentator'), ('cwt', 'Commentator for written text'), ('com', 'Compiler'), ('cpl', 'Complainant'), ('cpt', 'Complainant-appellant'), ('cpe', 'Complainant-appellee'), ('cmp', 'Composer'), ('cmt', 'Compositor'), ('ccp', 'Conceptor'), ('cnd', 'Conductor'), ('con', 'Conservator'), ('csl', 'Consultant'), ('csp', 'Consultant to a project'), ('cos', 'Contestant'), ('cot', 'Contestant-appellant'), ('coe', 'Contestant-appellee'), ('cts', 'Contestee'), ('ctt', 'Contestee-appellant'), ('cte', 'Contestee-appellee'), ('ctr', 'Contractor'), ('ctb', 'Contributor'), ('cpc', 'Copyright claimant'), ('cph', 'Copyright holder'), ('crr', 'Corrector'), ('crp', 'Correspondent'), ('cst', 'Costume designer'), ('cou', 'Court governed'), ('crt', 'Court reporter'), ('cov', 'Cover designer'), ('cre', 'Creator'), ('cur', 'Curator'), ('dnc', 'Dancer'), ('dtc', 'Data contributor'), ('dtm', 'Data manager'), ('dte', 'Dedicatee'), ('dto', 'Dedicator'), ('dfd', 'Defendant'), ('dft', 'Defendant-appellant'), ('dfe', 'Defendant-appellee'), ('dgc', 'Degree committee member'), ('dgg', 'Degree granting institution'), ('dgs', 'Degree supervisor'), ('dln', 'Delineator'), ('dpc', 'Depicted'), ('dpt', 'Depositor'), ('dsr', 'Designer'), ('drt', 'Director'), ('dis', 'Dissertant'), ('dbp', 'Distribution place'), ('djo', 'DJ'), ('dnr', 'Donor'), ('drm', 'Draftsman'), ('dbd', 'Dubbing director'), ('dub', 'Dubious author'), ('edt', 'Editor'), ('edc', 'Editor of compilation'), ('edm', 'Editor of moving image work'), ('edd', 'Editorial director'), ('elg', 'Electrician'), ('elt', 'Electrotyper'), ('enj', 'Enacting jurisdiction'), ('eng', 'Engineer'), ('egr', 'Engraver'), ('etr', 'Etcher'), ('evp', 'Event place'), ('exp', 'Expert'), ('fac', 'Facsimilist'), ('fld', 'Field director'), ('fmd', 'Film director'), ('fds', 'Film distributor'), ('flm', 'Film editor'), ('fmp', 'Film producer'), ('fmk', 'Filmmaker'), ('fpy', 'First party'), ('frg', 'Forger'), ('fmo', 'Former owner'), ('fon', 'Founder'), ('fnd', 'Funder'), ('gis', 'Geographic information specialist'), ('hnr', 'Honoree'), ('hst', 'Host'), ('his', 'Host institution'), ('ilu', 'Illuminator'), ('ill', 'Illustrator'), ('ins', 'Inscriber'), ('itr', 'Instrumentalist'), ('ive', 'Interviewee'), ('ivr', 'Interviewer'), ('inv', 'Inventor'), ('isb', 'Issuing body'), ('jud', 'Judge'), ('jug', 'Jurisdiction governed'), ('lbr', 'Laboratory'), ('ldr', 'Laboratory director'), ('lsa', 'Landscape architect'), ('led', 'Lead'), ('len', 'Lender'), ('lil', 'Libelant'), ('lit', 'Libelant-appellant'), ('lie', 'Libelant-appellee'), ('lel', 'Libelee'), ('let', 'Libelee-appellant'), ('lee', 'Libelee-appellee'), ('lbt', 'Librettist'), ('lse', 'Licensee'), ('lso', 'Licensor'), ('lgd', 'Lighting designer'), ('ltg', 'Lithographer'), ('lyr', 'Lyricist'), ('mka', 'Makeup artist'), ('mfp', 'Manufacture place'), ('mfr', 'Manufacturer'), ('mrb', 'Marbler'), ('mrk', 'Markup editor'), ('med', 'Medium'), ('mdc', 'Metadata contact'), ('mte', 'Metal-engraver'), ('mtk', 'Minute taker'), ('mxe', 'Mixing engineer'), ('mod', 'Moderator'), ('mon', 'Monitor'), ('mcp', 'Music copyist'), ('mup', 'Music programmer'), ('msd', 'Musical director'), ('mus', 'Musician'), ('nrt', 'Narrator'), ('nan', 'News anchor'), ('onp', 'Onscreen participant'), ('osp', 'Onscreen presenter'), ('opn', 'Opponent'), ('orm', 'Organizer'), ('org', 'Originator'), ('oth', 'Other'), ('own', 'Owner'), ('pan', 'Panelist'), ('ppm', 'Papermaker'), ('pta', 'Patent applicant'), ('pth', 'Patent holder'), ('pat', 'Patron'), ('prf', 'Performer'), ('pma', 'Permitting agency'), ('pht', 'Photographer'), ('pad', 'Place of address'), ('ptf', 'Plaintiff'), ('ptt', 'Plaintiff-appellant'), ('pte', 'Plaintiff-appellee'), ('plt', 'Platemaker'), ('pra', 'Praeses'), ('pre', 'Presenter'), ('prt', 'Printer'), ('pop', 'Printer of plates'), ('prm', 'Printmaker'), ('prc', 'Process contact'), ('pro', 'Producer'), ('prn', 'Production company'), ('prs', 'Production designer'), ('pmn', 'Production manager'), ('prd', 'Production personnel'), ('prp', 'Production place'), ('prg', 'Programmer'), ('pdr', 'Project director'), ('pfr', 'Proofreader'), ('prv', 'Provider'), ('pup', 'Publication place'), ('pbl', 'Publisher'), ('pbd', 'Publishing director'), ('ppt', 'Puppeteer'), ('rdd', 'Radio director'), ('rpc', 'Radio producer'), ('rap', 'Rapporteur'), ('rce', 'Recording engineer'), ('rcd', 'Recordist'), ('red', 'Redaktor'), ('rxa', 'Remix artist'), ('ren', 'Renderer'), ('rpt', 'Reporter'), ('rps', 'Repository'), ('rth', 'Research team head'), ('rtm', 'Research team member'), ('res', 'Researcher'), ('rsp', 'Respondent'), ('rst', 'Respondent-appellant'), ('rse', 'Respondent-appellee'), ('rpy', 'Responsible party'), ('rsg', 'Restager'), ('rsr', 'Restorationist'), ('rev', 'Reviewer'), ('rbr', 'Rubricator'), ('sce', 'Scenarist'), ('sad', 'Scientific advisor'), ('aus', 'Screenwriter'), ('scr', 'Scribe'), ('scl', 'Sculptor'), ('spy', 'Second party'), ('sec', 'Secretary'), ('sll', 'Seller'), ('std', 'Set designer'), ('stg', 'Setting'), ('sgn', 'Signer'), ('sng', 'Singer'), ('swd', 'Software developer'), ('sds', 'Sound designer'), ('sde', 'Sound engineer'), ('spk', 'Speaker'), ('sfx', 'Special effects provider'), ('spn', 'Sponsor'), ('sgd', 'Stage director'), ('stm', 'Stage manager'), ('stn', 'Standards body'), ('str', 'Stereotyper'), ('stl', 'Storyteller'), ('sht', 'Supporting host'), ('srv', 'Surveyor'), ('tch', 'Teacher'), ('tcd', 'Technical director'), ('tld', 'Television director'), ('tlg', 'Television guest'), ('tlh', 'Television host'), ('tlp', 'Television producer'), ('tau', 'Television writer'), ('ths', 'Thesis advisor'), ('trc', 'Transcriber'), ('trl', 'Translator'), ('tyd', 'Type designer'), ('tyg', 'Typographer'), ('uvp', 'University place'), ('vdg', 'Videographer'), ('vfx', 'Visual effects provider'), ('vac', 'Voice actor'), ('wit', 'Witness'), ('wde', 'Wood engraver'), ('wdc', 'Woodcutter'), ('wam', 'Writer of accompanying material'), ('wac', 'Writer of added commentary'), ('wal', 'Writer of added lyrics'), ('wat', 'Writer of added text'), ('win', 'Writer of introduction'), ('wpr', 'Writer of preface'), ('wst', 'Writer of supplementary textual content')]), default=list, size=None, verbose_name='responsibilities')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ['Resource', 'Edition', 'Occurrence']}, on_delete=django.db.models.deletion.CASCADE, related_name='person_responsibility_statements', to='contenttypes.contenttype')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsibility_statements', to='intertidal.person')),
            ],
            options={
                'db_table': 'intertidal_person_responsibility_statement',
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='intertidal__content_2c79cb_idx')],
            },
        ),
    ]
